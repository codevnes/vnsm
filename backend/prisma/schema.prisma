generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  // Sử dụng vị trí mặc định của Prisma client
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email     String   @unique @db.VarChar(255)
  full_name String   @db.VarChar(255)
  phone     String?  @db.VarChar(20)
  password  String   @db.VarChar(255)
  role      Role     @default(user)
  thumbnail String?  @db.VarChar(255)
  verified  Boolean? @default(false)
  posts     Post[]

  @@map("users")
}

model Category {
  id          BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title       String     @db.VarChar(255)
  slug        String     @unique @db.VarChar(255)
  thumbnail   String?    @db.VarChar(255)
  description String?    @db.Text
  parent_id   BigInt?    @map("parent") @db.UnsignedBigInt
  parent      Category?  @relation("SubCategories", fields: [parent_id], references: [id])
  children    Category[] @relation("SubCategories")
  posts       Post[]

  @@index([parent_id], map: "categories_parent_fkey")
  @@map("categories")
}

model Stock {
  id                  BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  symbol              String                 @unique @db.VarChar(20)
  name                String                 @db.VarChar(255)
  exchange            String?                @db.VarChar(100)
  industry            String?                @db.VarChar(100)
  posts               Post[]
  qindexes            StockQIndex[]
  epsRecords          EpsRecord[]
  peRecords           PeRecord[]
  roaRoeRecords       RoaRoeRecord[]
  financialRatioRecords FinancialRatioRecord[]

  @@map("stocks")
}

model Post {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title       String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  description String?  @db.Text
  content     String?  @db.LongText
  thumbnail   String?  @db.VarChar(255)
  category_id BigInt   @db.UnsignedBigInt
  stock_id    BigInt?  @db.UnsignedBigInt
  user_id     BigInt   @db.UnsignedBigInt
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  category    Category @relation(fields: [category_id], references: [id])
  stock       Stock?   @relation(fields: [stock_id], references: [id])
  user        User     @relation(fields: [user_id], references: [id])

  @@index([category_id], map: "posts_category_id_fkey")
  @@index([stock_id], map: "posts_stock_id_fkey")
  @@index([user_id], map: "posts_user_id_fkey")
  @@map("posts")
}

model Image {
  id                Int      @id @default(autoincrement())
  filename          String
  processedFilename String
  path              String
  url               String   @unique
  altText           String?
  mimetype          String?
  size              Int?
  width             Int?
  height            Int?
  createdAt         DateTime @default(now())

  @@map("Image")
}

model StockQIndex {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  stock_id  BigInt   @db.UnsignedBigInt
  date      DateTime @db.Date
  open      Decimal? @db.Decimal(15, 5)
  low       Decimal? @db.Decimal(15, 5)
  high      Decimal? @db.Decimal(15, 5)
  close     Decimal? @db.Decimal(15, 5)
  trend_q   Decimal? @db.Decimal(15, 5)
  fq        Decimal? @db.Decimal(15, 5)
  qv1       BigInt?
  band_down Decimal? @db.Decimal(15, 5)
  band_up   Decimal? @db.Decimal(15, 5)
  stock     Stock    @relation(fields: [stock_id], references: [id])

  @@unique([stock_id, date])
  @@index([stock_id])
  @@index([date])
  @@map("stock_qindex")
}

model CurrencyPrice {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  symbol    String   @db.VarChar(20)
  date      DateTime @db.Date
  open      Decimal  @db.Decimal(15, 5)
  high      Decimal  @db.Decimal(15, 5)
  low       Decimal  @db.Decimal(15, 5)
  close     Decimal  @db.Decimal(15, 5)
  trend_q   Decimal  @db.Decimal(15, 10)
  fq        Decimal  @db.Decimal(15, 10)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([symbol, date])
  @@index([symbol])
  @@index([date])
  @@map("currency_prices")
}

model EpsRecord {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  symbol     String   @db.VarChar(20)
  reportDate DateTime @db.Date @map("report_date")
  eps        Float?
  epsNganh   Float?   @map("eps_nganh")
  epsRate    Float?   @map("eps_rate")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  stock      Stock?   @relation(fields: [symbol], references: [symbol])

  @@unique([symbol, reportDate])
  @@index([symbol])
  @@index([reportDate])
  @@map("eps_records")
}

model PeRecord {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  symbol     String   @db.VarChar(20)
  reportDate DateTime @db.Date @map("report_date")
  pe         Float?
  peNganh    Float?   @map("pe_nganh")
  peRate     Float?   @map("pe_rate")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  stock      Stock?   @relation(fields: [symbol], references: [symbol])

  @@unique([symbol, reportDate])
  @@index([symbol])
  @@index([reportDate])
  @@map("pe_records")
}

model RoaRoeRecord {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  symbol     String   @db.VarChar(20)
  reportDate DateTime @db.Date @map("report_date")
  roa        Float?
  roe        Float?
  roeNganh   Float?   @map("roe_nganh")
  roaNganh   Float?   @map("roa_nganh")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  stock      Stock?   @relation(fields: [symbol], references: [symbol])

  @@unique([symbol, reportDate])
  @@index([symbol])
  @@index([reportDate])
  @@map("roa_roe_records")
}

model FinancialRatioRecord {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  symbol       String   @db.VarChar(20)
  reportDate   DateTime @db.Date @map("report_date")
  debtEquity   Float?   @map("debt_equity")
  assetsEquity Float?   @map("assets_equity")
  debtEquityPct Float?  @map("debt_equity_pct")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  stock        Stock?   @relation(fields: [symbol], references: [symbol])

  @@unique([symbol, reportDate])
  @@index([symbol])
  @@index([reportDate])
  @@map("financial_ratio_records")
}

enum Role {
  admin
  editor
  user
}
